<tool id="cta_astro_tool" name="CTA" version="0.0.1+galaxy0" profile="23.0">
  <requirements>
    <requirement type="package" version="6.0">unzip</requirement>
    <requirement type="package" version="2.31.0">requests</requirement>
    <requirement type="package" version="1.2">gammapy</requirement>
    <requirement type="package" version="5.3">astropy</requirement>
    <requirement type="package" version="3.8.4">matplotlib</requirement>
    <requirement type="package" version="1.11.4">scipy</requirement>
    <requirement type="package" version="1.2.15">oda-api</requirement>
    <requirement type="package" version="8.22.2">ipython</requirement>
    <!--Requirements string 'nb2workflow[cwl,service,rdf,mmoda]>=1.3.30 
' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
    <requirement type="package" version="7.16.3">nbconvert</requirement>
  </requirements>
  <command detect_errors="exit_code">ipython '$__tool_directory__/${_data_product._selector}.py'</command>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <inputs>
    <conditional name="_data_product">
      <param name="_selector" type="select" label="Data Product">
        <option value="model_CTA_events_from_file" selected="true">model_CTA_events_from_file</option>
        <option value="Simulate_pointing" selected="false">Simulate_pointing</option>
      </param>
      <when value="model_CTA_events_from_file">
        <param name="Texp" type="float" value="2.4" label="Texp (unit: hour)" />
        <param name="file_path" type="data" label="file_path" format="data" />
        <param name="Emax" type="integer" value="30" label="Emax (unit: TeV)" />
        <param name="Emin" type="float" value="0.1" label="Emin (unit: TeV)" />
        <param name="norm_cm2_TeV_s" type="float" value="1e-12" label="norm_cm2_TeV_s" />
        <param name="norm_energy" type="float" value="1.0" label="norm_energy (unit: TeV)" />
        <param name="pointing_shift" type="float" value="0.2" label="pointing_shift (unit: deg)" />
        <param name="pixsize" type="float" value="0.1" label="pixsize (unit: deg)" />
      </when>
      <when value="Simulate_pointing">
        <param name="RA" type="float" value="166.113809" label="RA (unit: deg)" />
        <param name="DEC" type="float" value="-38.208833" label="DEC (unit: deg)" />
        <param name="Radius" type="float" value="2.5" label="Radius (unit: deg)" />
        <param name="Texp" type="float" value="1.0" label="Texp (unit: hour)" />
        <param name="z" type="float" value="0.1" label="z" />
        <param name="F0" type="float" value="4e-13" label="F0" />
        <param name="E0" type="float" value="1.0" label="E0 (unit: TeV)" />
        <param name="Gamma" type="float" value="1.75" label="Gamma" />
        <param name="sigma" type="float" value="0.0" label="sigma" />
        <param name="RA_pnt" type="float" value="167.113809" label="RA_pnt (unit: deg)" />
        <param name="DEC_pnt" type="float" value="38.208833" label="DEC_pnt (unit: deg)" />
        <param name="Site" type="select" label="Site">
          <option value="North">North</option>
          <option value="South" selected="true">South</option>
        </param>
        <param name="LSTs" type="boolean" value="True" label="LSTs" />
        <param name="MSTs" type="boolean" value="True" label="MSTs" />
        <param name="SSTs" type="boolean" value="False" label="SSTs" />
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; model_CTA_events_from_file spectrum_plot" name="out_model_CTA_events_from_file_spectrum_plot" format="auto" from_work_dir="spectrum_plot_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events_from_file'</filter>
    </data>
    <data label="${tool.name} -&gt; model_CTA_events_from_file theta_plot" name="out_model_CTA_events_from_file_theta_plot" format="auto" from_work_dir="theta_plot_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events_from_file'</filter>
    </data>
    <data label="${tool.name} -&gt; model_CTA_events_from_file picture" name="out_model_CTA_events_from_file_picture" format="auto" from_work_dir="picture_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events_from_file'</filter>
    </data>
    <data label="${tool.name} -&gt; model_CTA_events_from_file image" name="out_model_CTA_events_from_file_image" format="auto" from_work_dir="image_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events_from_file'</filter>
    </data>
    <data label="${tool.name} -&gt; model_CTA_events_from_file event_list" name="out_model_CTA_events_from_file_event_list" format="auto" from_work_dir="event_list_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events_from_file'</filter>
    </data>
    <data label="${tool.name} -&gt; Simulate_pointing picture" name="out_Simulate_pointing_picture" format="auto" from_work_dir="picture_galaxy.output">
      <filter>_data_product['_selector'] == 'Simulate_pointing'</filter>
    </data>
    <data label="${tool.name} -&gt; Simulate_pointing image" name="out_Simulate_pointing_image" format="auto" from_work_dir="image_galaxy.output">
      <filter>_data_product['_selector'] == 'Simulate_pointing'</filter>
    </data>
    <data label="${tool.name} -&gt; Simulate_pointing event_list" name="out_Simulate_pointing_event_list" format="auto" from_work_dir="event_list_galaxy.output">
      <filter>_data_product['_selector'] == 'Simulate_pointing'</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="5">
      <conditional name="_data_product">
        <param name="_selector" value="model_CTA_events_from_file" />
        <param name="Texp" value="2.4" />
        <param name="file_path" location="https://gitlab.renkulab.io/astronomy/mmoda/cta/-/raw/299cbce054c111278e8a2bdae6e5a2e4fe096ee4/3d.fits" />
        <param name="Emax" value="30" />
        <param name="Emin" value="0.1" />
        <param name="norm_cm2_TeV_s" value="1e-12" />
        <param name="norm_energy" value="1.0" />
        <param name="pointing_shift" value="0.2" />
        <param name="pixsize" value="0.1" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="3">
      <conditional name="_data_product">
        <param name="_selector" value="Simulate_pointing" />
        <param name="RA" value="166.113809" />
        <param name="DEC" value="-38.208833" />
        <param name="Radius" value="2.5" />
        <param name="Texp" value="1.0" />
        <param name="z" value="0.1" />
        <param name="F0" value="4e-13" />
        <param name="E0" value="1.0" />
        <param name="Gamma" value="1.75" />
        <param name="sigma" value="0.0" />
        <param name="RA_pnt" value="167.113809" />
        <param name="DEC_pnt" value="38.208833" />
        <param name="Site" value="South" />
        <param name="LSTs" value="True" />
        <param name="MSTs" value="True" />
        <param name="SSTs" value="False" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
</tool>
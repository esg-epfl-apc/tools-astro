<tool id="crbeam_astro_tool" name="CRbeam" version="0.0.1+galaxy0" profile="23.0">
  <requirements>
    <requirement type="package" version="3.28.1">cmake</requirement>
    <requirement type="package" version="12.3.0">gfortran</requirement>
    <requirement type="package" version="2.7">gsl</requirement>
    <requirement type="package" version="1.7.0">compilers</requirement>
    <requirement type="package" version="14.0.2">pyarrow</requirement>
    <requirement type="package" version="8.20.0">ipython</requirement>
    <!--Requirements string 'oda_api
' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
    <requirement type="package" version="3.8.2">matplotlib</requirement>
    <!--Requirements string 'nb2workflow[cwl,service,rdf,mmoda]>=1.3.30 
' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
    <requirement type="package" version="7.14.2">nbconvert</requirement>
    <requirement type="package" version="0.13.1">seaborn</requirement>
    <requirement type="package" version="7.2.3">minio</requirement>
    <requirement type="package" version="1.11.0">specutils</requirement>
    <requirement type="package" version="1.1">gammapy</requirement>
    <requirement type="package" version="0.4.6">astroquery</requirement>
    <requirement type="package" version="5.3">astropy</requirement>
  </requirements>
  <command detect_errors="exit_code">ipython '$__tool_directory__/${_data_product._selector}.py'</command>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" />
  </configfiles>
  <inputs>
    <conditional name="_data_product">
      <param name="_selector" type="select" label="Data Product">
        <option value="model_CTA_events" selected="true">model_CTA_events</option>
        <option value="CRbeam" selected="false">CRbeam</option>
      </param>
      <when value="model_CTA_events">
        <param name="src_name" type="text" value="Mrk 501" label="src_name" />
        <param name="z_start" type="integer" value="0" label="z_start" />
        <param name="Npart" type="integer" value="5000" label="Npart" min="1" max="100000" />
        <param name="particle_type" type="select" label="particle_type">
          <option value="electron">electron</option>
          <option value="gamma" selected="true">gamma</option>
          <option value="proton">proton</option>
        </param>
        <param name="Emax" type="integer" value="30" label="Emax Units: TeV" />
        <param name="Emin" type="float" value="0.1" label="Emin Units: TeV" />
        <param name="EminSource" type="float" value="1.0" label="EminSource Units: TeV" />
        <param name="Gamma" type="float" value="2.0" label="Gamma" />
        <param name="EGMF_fG" type="integer" value="10" label="EGMF_fG" />
        <param name="lmaxEGMF_Mpc" type="integer" value="5" label="lmaxEGMF_Mpc" />
        <param name="jet_half_size" type="float" value="5.0" label="jet_half_size Units: deg" />
        <param name="jet_direction" type="float" value="0.0" label="jet_direction Units: deg" />
        <param name="window_size_RA" type="float" value="2.0" label="window_size_RA Units: deg" />
        <param name="window_size_DEC" type="float" value="1.0" label="window_size_DEC Units: deg" />
        <param name="livetime" type="float" value="0.1" label="livetime Units: day" />
        <param name="EBL" type="select" label="EBL">
          <option value="Franceschini 2017" selected="true">Franceschini 2017</option>
          <option value="Inoue 2012 Baseline">Inoue 2012 Baseline</option>
          <option value="Inoue 2012 lower limit">Inoue 2012 lower limit</option>
          <option value="Inoue 2012 upper limit">Inoue 2012 upper limit</option>
          <option value="Stecker 2016 lower limit">Stecker 2016 lower limit</option>
          <option value="Stecker 2016 upper limit">Stecker 2016 upper limit</option>
        </param>
      </when>
      <when value="CRbeam">
        <param name="src_name" type="text" value="NGC 1365" label="src_name" />
        <param name="z_start" type="integer" value="0" label="z_start" />
        <param name="Npart" type="integer" value="2000" label="Npart" min="1" max="100000" />
        <param name="particle_type" type="select" label="particle_type">
          <option value="electron">electron</option>
          <option value="gamma" selected="true">gamma</option>
          <option value="proton">proton</option>
        </param>
        <param name="Emax" type="integer" value="30" label="Emax Units: TeV" />
        <param name="Emin" type="float" value="0.01" label="Emin Units: TeV" />
        <param name="EminSource" type="float" value="1.0" label="EminSource Units: TeV" />
        <param name="Gamma" type="float" value="2.0" label="Gamma" />
        <param name="EGMF_fG" type="integer" value="10" label="EGMF_fG" />
        <param name="lmaxEGMF_Mpc" type="integer" value="5" label="lmaxEGMF_Mpc" />
        <param name="jet_half_size" type="float" value="5.0" label="jet_half_size Units: deg" />
        <param name="jet_direction" type="float" value="0.0" label="jet_direction Units: deg" />
        <param name="psf" type="float" value="1.0" label="psf Units: deg" />
        <param name="EBL" type="select" label="EBL">
          <option value="Franceschini 2017" selected="true">Franceschini 2017</option>
          <option value="Inoue 2012 Baseline">Inoue 2012 Baseline</option>
          <option value="Inoue 2012 lower limit">Inoue 2012 lower limit</option>
          <option value="Inoue 2012 upper limit">Inoue 2012 upper limit</option>
          <option value="Stecker 2016 lower limit">Stecker 2016 lower limit</option>
          <option value="Stecker 2016 upper limit">Stecker 2016 upper limit</option>
        </param>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; model_CTA_events events_summary_png" name="out_model_CTA_events_events_summary_png" format="auto" from_work_dir="events_summary_png_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events'</filter>
    </data>
    <data label="${tool.name} -&gt; model_CTA_events events_fits_fits" name="out_model_CTA_events_events_fits_fits" format="auto" from_work_dir="events_fits_fits_galaxy.output">
      <filter>_data_product['_selector'] == 'model_CTA_events'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam spectrum_png" name="out_CRbeam_spectrum_png" format="auto" from_work_dir="spectrum_png_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam light_curve_png" name="out_CRbeam_light_curve_png" format="auto" from_work_dir="light_curve_png_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam total_spectrum_table" name="out_CRbeam_total_spectrum_table" format="auto" from_work_dir="total_spectrum_table_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam psf_spectrum_table" name="out_CRbeam_psf_spectrum_table" format="auto" from_work_dir="psf_spectrum_table_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam lc_result" name="out_CRbeam_lc_result" format="auto" from_work_dir="lc_result_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam spectrum" name="out_CRbeam_spectrum" format="auto" from_work_dir="spectrum_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
    <data label="${tool.name} -&gt; CRbeam spectrum_rotated" name="out_CRbeam_spectrum_rotated" format="auto" from_work_dir="spectrum_rotated_galaxy.output">
      <filter>_data_product['_selector'] == 'CRbeam'</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="model_CTA_events" />
        <param name="src_name" value="Mrk 501" />
        <param name="z_start" value="0" />
        <param name="Npart" value="5000" />
        <param name="particle_type" value="gamma" />
        <param name="Emax" value="30" />
        <param name="Emin" value="0.1" />
        <param name="EminSource" value="1.0" />
        <param name="Gamma" value="2.0" />
        <param name="EGMF_fG" value="10" />
        <param name="lmaxEGMF_Mpc" value="5" />
        <param name="jet_half_size" value="5.0" />
        <param name="jet_direction" value="0.0" />
        <param name="window_size_RA" value="2.0" />
        <param name="window_size_DEC" value="1.0" />
        <param name="livetime" value="0.1" />
        <param name="EBL" value="Franceschini 2017" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="7">
      <conditional name="_data_product">
        <param name="_selector" value="CRbeam" />
        <param name="src_name" value="NGC 1365" />
        <param name="z_start" value="0" />
        <param name="Npart" value="2000" />
        <param name="particle_type" value="gamma" />
        <param name="Emax" value="30" />
        <param name="Emin" value="0.01" />
        <param name="EminSource" value="1.0" />
        <param name="Gamma" value="2.0" />
        <param name="EGMF_fG" value="10" />
        <param name="lmaxEGMF_Mpc" value="5" />
        <param name="jet_half_size" value="5.0" />
        <param name="jet_direction" value="0.0" />
        <param name="psf" value="1.0" />
        <param name="EBL" value="Franceschini 2017" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
</tool>
<tool id="lightcurve_analysis_astro_tool" name="lightcurve-analysis" version="0.0.1+galaxy0" profile="23.0">
  <requirements>
    <requirement type="package" version="8.22.1">ipython</requirement>
    <requirement type="package" version="5.3">astropy</requirement>
    <requirement type="package" version="1.26.4">numpy</requirement>
    <requirement type="package" version="1.11.4">scipy</requirement>
    <requirement type="package" version="2.25.2">iminuit</requirement>
    <requirement type="package" version="3.8.3">matplotlib</requirement>
    <requirement type="package" version="1.20.3">wget</requirement>
    <requirement type="package" version="0.70.16">multiprocess</requirement>
    <requirement type="package" version="1.2.12">oda-api</requirement>
    <requirement type="package" version="7.16.1">nbconvert</requirement>
    <requirement type="package" version="1.1">gammapy</requirement>
    <requirement type="package" version="0.4.6">astroquery</requirement>
    <requirement type="package" version="1.10.13">pydantic</requirement>
    <requirement type="package" version="4.66.2">tqdm</requirement>
    <!--Requirements string 'nb2workflow' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
  </requirements>
  <command detect_errors="exit_code">python '$__tool_directory__/${_data_product._selector}.py'</command>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <inputs>
    <conditional name="_data_product">
      <param name="_selector" type="select" label="Data Product">
        <option value="correlate" selected="true">correlate</option>
        <option value="detect_impulsive" selected="false">detect_impulsive</option>
      </param>
      <when value="correlate">
        <param name="light_curve_1" type="data" label="light_curve_1" />
        <param name="light_curve_2" type="data" label="light_curve_2" />
        <param name="mode" type="select" label="mode">
          <option value="Background" selected="true">Background</option>
          <option value="Focus">Focus</option>
          <option value="Peak">Peak</option>
        </param>
      </when>
      <when value="detect_impulsive">
        <param name="light_curve" type="data" label="light_curve" />
        <param name="time_column" type="text" value="TIME" label="time_column" />
        <param name="rate_column" type="text" value="FLUX" label="rate_column" />
        <param name="rate_err_column" type="text" value="FLUX_ERR" label="rate_err_column" />
        <param name="mode" type="select" label="mode">
          <option value="Background" selected="true">Background</option>
          <option value="Focus">Focus</option>
          <option value="Peak">Peak</option>
          <option value="Standartize">Standartize</option>
        </param>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; correlate detection_image" name="out_correlate_detection_image" format="auto" from_work_dir="detection_image_galaxy.output">
      <filter>_data_product['_selector'] == 'correlate'</filter>
    </data>
    <data label="${tool.name} -&gt; correlate processed_lc" name="out_correlate_processed_lc" format="auto" from_work_dir="processed_lc_galaxy.output">
      <filter>_data_product['_selector'] == 'correlate'</filter>
    </data>
    <data label="${tool.name} -&gt; detect_impulsive detection_image" name="out_detect_impulsive_detection_image" format="auto" from_work_dir="detection_image_galaxy.output">
      <filter>_data_product['_selector'] == 'detect_impulsive'</filter>
    </data>
    <data label="${tool.name} -&gt; detect_impulsive processed_lc" name="out_detect_impulsive_processed_lc" format="auto" from_work_dir="processed_lc_galaxy.output">
      <filter>_data_product['_selector'] == 'detect_impulsive'</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="correlate" />
        <param name="light_curve_1" value="None" />
        <param name="light_curve_2" value="None" />
        <param name="mode" value="Background" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="detect_impulsive" />
        <param name="light_curve" value="None" />
        <param name="time_column" value="TIME" />
        <param name="rate_column" value="FLUX" />
        <param name="rate_err_column" value="FLUX_ERR" />
        <param name="mode" value="Background" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
</tool>
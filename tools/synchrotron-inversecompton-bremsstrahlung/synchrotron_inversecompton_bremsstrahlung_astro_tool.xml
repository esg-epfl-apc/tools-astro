<tool id="synchrotron_inversecompton_bremsstrahlung_astro_tool" name="Synchrotron-InverseCompton-Bremsstrahlung" version="0.0.1+galaxy0" profile="23.0">
  <requirements>
    <requirement type="package" version="8.29.0">ipython</requirement>
    <requirement type="package" version="6.1.4">astropy</requirement>
    <requirement type="package" version="3.9.2">matplotlib</requirement>
    <requirement type="package" version="0.4.7">astroquery</requirement>
    <requirement type="package" version="1.14.1">scipy</requirement>
    <requirement type="package" version="1.2.27">oda-api</requirement>
    <!--Requirements string 'nb2workflow[cwl,service,rdf,mmoda]>=1.3.30 
' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
    <requirement type="package" version="7.16.4">nbconvert</requirement>
  </requirements>
  <command detect_errors="exit_code">python '$__tool_directory__/SIC_BREMS.py'</command>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <inputs>
    <param name="Gamma_inj" type="float" value="2.0" label="Gamma" />
    <param name="Ecut" type="float" value="30000000000000.0" label="Ecut" />
    <param name="B" type="float" value="3e-06" label="B" />
    <param name="n" type="float" value="0.1" label="n" />
    <param name="Z" type="float" value="1.4" label="Z" />
    <param name="T" type="float" value="2.73" label="T" />
    <param name="Back_norm" type="float" value="1.0" label="Back_norm" />
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; SIC_BREMS spectrum_png" name="out_SIC_BREMS_spectrum_png" format="auto" from_work_dir="spectrum_png_galaxy.output" />
    <data label="${tool.name} -&gt; SIC_BREMS spectrum_table" name="out_SIC_BREMS_spectrum_table" format="auto" from_work_dir="spectrum_table_galaxy.output" />
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <param name="Gamma_inj" value="2.0" />
      <param name="Ecut" value="30000000000000.0" />
      <param name="B" value="3e-06" />
      <param name="n" value="0.1" />
      <param name="Z" value="1.4" />
      <param name="T" value="2.73" />
      <param name="Back_norm" value="1.0" />
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
</tool>
<tool id="synchrotron_inversecompton_bremsstrahlung_astro_tool" name="Synch-IC-Brems" version="0.0.1+galaxy0" profile="23.0">
  <requirements>
    <requirement type="package" version="9.0.2">ipython</requirement>
    <requirement type="package" version="7.0.1">astropy</requirement>
    <requirement type="package" version="3.10.1">matplotlib</requirement>
    <requirement type="package" version="0.4.9.post1">astroquery</requirement>
    <requirement type="package" version="1.15.2">scipy</requirement>
    <requirement type="package" version="1.2.27">oda-api</requirement>
    <requirement type="package" version="7.16.6">nbconvert</requirement>
    <!--Requirements string 'nb2workflow[cwl,service,rdf,mmoda]>=1.3.30 
' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
  </requirements>
  <command detect_errors="exit_code">python '$__tool_directory__/${_data_product._selector}.py'</command>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <environment_variables>
    <environment_variable name="BASEDIR">$__tool_directory__</environment_variable>
    <environment_variable name="GALAXY_TOOL_DIR">$__tool_directory__</environment_variable>
  </environment_variables>
  <inputs>
    <conditional name="_data_product">
      <param name="_selector" type="select" label="Data Product">
        <option value="Synchrotron-self-Compton_Bremsstrhalung" selected="true">Synchrotron-self-Compton_Bremsstrhalung</option>
        <option value="Synchrotron_external-Compton_Bremsstrahlung" selected="false">Synchrotron_external-Compton_Bremsstrahlung</option>
      </param>
      <when value="Synchrotron-self-Compton_Bremsstrhalung">
        <param name="dN_dE" type="text" value="2.0e-11*pow(E/1e12, -1.99)*exp(-E/1e12)" label="Electron spectrum dN/dE" />
        <param name="electron_file" type="data" label="Electron spectrum ascii file (overrides analytical formula)" format="data" />
        <param name="Emin" type="float" value="1e-10" label="minimal energy for calculations (unit: eV)" />
        <param name="Emax" type="float" value="100000000000000.0" label="maximal energy for calculations (unit: eV)" />
        <param name="B" type="float" value="3e-06" label="magnetic field [G]" />
        <param name="n" type="float" value="0.1" label="density of the medium [1/cm3]" />
        <param name="Z" type="float" value="1.4" label="average atomic charge of the medium" />
        <param name="synch_dens" type="float" value="0.25" label="Energy density of synchrotron radiation [eV/cm3]" />
      </when>
      <when value="Synchrotron_external-Compton_Bremsstrahlung">
        <param name="dN_dE" type="text" value="2.0e-11*pow(E/5e10, -2.)*exp(-E/5e10)" label="Electron spectrum dN/dE" />
        <param name="electron_file" type="data" label="Electron spectrum ascii file (overrides analytical formula)" format="data" />
        <param name="Emin" type="float" value="1e-10" label="minimal energy for calculations (unit: eV)" />
        <param name="Emax" type="float" value="100000000000000.0" label="maximal energy for calculations (unit: eV)" />
        <param name="B" type="float" value="3e-08" label="magnetic field [G]" />
        <param name="n" type="float" value="0.1" label="density of the medium [1/cm3]" />
        <param name="Z" type="float" value="1.4" label="average atomic charge of the medium" />
        <param name="T" type="float" value="2.73" label="Temperature of black body photon background [K]" />
        <param name="Back_norm" type="float" value="1.0" label="Normalization of blackbody photon background (&lt;=1)" />
        <param name="backgr_dN_dE" type="text" value="E**2/(exp(E/(8.6e-5*2.73))-1)/3.14**2/(2e-5)**3" label="Custom background spectral energy density [1/(eV cm3)]" />
        <param name="backgr_file" type="data" label="Background spectrum ascii file (overrides parameters above)" format="data" />
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; Synchrotron-self-Compton_Bremsstrhalung spectrum_png" name="out_Synchrotron_self_Compton_Bremsstrhalung_spectrum_png" format="auto" from_work_dir="spectrum_png_galaxy.output">
      <filter>_data_product['_selector'] == 'Synchrotron-self-Compton_Bremsstrhalung'</filter>
    </data>
    <data label="${tool.name} -&gt; Synchrotron-self-Compton_Bremsstrhalung spectrum_table" name="out_Synchrotron_self_Compton_Bremsstrhalung_spectrum_table" format="auto" from_work_dir="spectrum_table_galaxy.output">
      <filter>_data_product['_selector'] == 'Synchrotron-self-Compton_Bremsstrhalung'</filter>
    </data>
    <data label="${tool.name} -&gt; Synchrotron_external-Compton_Bremsstrahlung spectrum_png" name="out_Synchrotron_external_Compton_Bremsstrahlung_spectrum_png" format="auto" from_work_dir="spectrum_png_galaxy.output">
      <filter>_data_product['_selector'] == 'Synchrotron_external-Compton_Bremsstrahlung'</filter>
    </data>
    <data label="${tool.name} -&gt; Synchrotron_external-Compton_Bremsstrahlung spectrum_table" name="out_Synchrotron_external_Compton_Bremsstrahlung_spectrum_table" format="auto" from_work_dir="spectrum_table_galaxy.output">
      <filter>_data_product['_selector'] == 'Synchrotron_external-Compton_Bremsstrahlung'</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="Synchrotron-self-Compton_Bremsstrhalung" />
        <param name="dN_dE" value="2.0e-11*pow(E/1e12, -1.99)*exp(-E/1e12)" />
        <param name="electron_file" value="electron_file.json" />
        <param name="Emin" value="1e-10" />
        <param name="Emax" value="100000000000000.0" />
        <param name="B" value="3e-06" />
        <param name="n" value="0.1" />
        <param name="Z" value="1.4" />
        <param name="synch_dens" value="0.25" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="2">
      <conditional name="_data_product">
        <param name="_selector" value="Synchrotron_external-Compton_Bremsstrahlung" />
        <param name="dN_dE" value="2.0e-11*pow(E/5e10, -2.)*exp(-E/5e10)" />
        <param name="electron_file" value="electron_file.json" />
        <param name="Emin" value="1e-10" />
        <param name="Emax" value="100000000000000.0" />
        <param name="B" value="3e-08" />
        <param name="n" value="0.1" />
        <param name="Z" value="1.4" />
        <param name="T" value="2.73" />
        <param name="Back_norm" value="1.0" />
        <param name="backgr_dN_dE" value="E**2/(exp(E/(8.6e-5*2.73))-1)/3.14**2/(2e-5)**3" />
        <param name="backgr_file" value="backgr_file.json" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
</tool>
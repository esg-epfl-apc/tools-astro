<tool id="desi_legacy_survey_astro_tool" name="DESI Legacy Survey" version="0.0.1+galaxy0" profile="24.0">
  <requirements>
    <requirement type="package" version="6.1.4">astropy</requirement>
    <requirement type="package" version="3.10.1">matplotlib</requirement>
    <requirement type="package" version="1.21.4">wget</requirement>
    <requirement type="package" version="7.16.6">nbconvert</requirement>
    <requirement type="package" version="0.4.10">astroquery</requirement>
    <requirement type="package" version="1.2.33">oda-api</requirement>
    <requirement type="package" version="9.1.0">ipython</requirement>
    <!--Requirements string 'nb2workflow>=1.3.30' can't be converted automatically. Please add the galaxy/conda requirement manually or modify the requirements file!-->
  </requirements>
  <command detect_errors="exit_code">ipython '$__tool_directory__/${C_data_product_.DPselector_}.py'</command>
  <environment_variables>
    <environment_variable name="BASEDIR">$__tool_directory__</environment_variable>
    <environment_variable name="GALAXY_TOOL_DIR">$__tool_directory__</environment_variable>
  </environment_variables>
  <configfiles>
    <inputs name="inputs" filename="inputs.json" data_style="paths" />
  </configfiles>
  <inputs>
    <conditional name="C_data_product_">
      <param name="DPselector_" type="select" label="Data Product">
        <option value="Catalog" selected="true">Catalog</option>
        <option value="Spectrum" selected="false">Spectrum</option>
        <option value="Image" selected="false">Image</option>
      </param>
      <when value="Catalog">
        <param name="src_name" type="text" value="Mrk 421" label="src_name" optional="false" />
        <param name="RA" type="float" value="166.113808" label="RA (unit: deg)" optional="false" />
        <param name="DEC" type="float" value="38.208833" label="DEC (unit: deg)" optional="false" />
        <param name="Radius" type="float" value="1" label="Radius (unit: arcmin)" optional="false" />
        <param name="data_release" type="integer" value="10" label="Data Release" optional="false" />
      </when>
      <when value="Spectrum">
        <param name="src_name" type="text" value="Mrk 421" label="src_name" optional="false" />
        <param name="RA" type="float" value="166.113808" label="RA (unit: deg)" optional="false" />
        <param name="DEC" type="float" value="38.208833" label="DEC (unit: deg)" optional="false" />
        <param name="Radius" type="float" value="0.1" label="Radius (unit: arcmin)" optional="false" />
        <param name="data_release" type="integer" value="10" label="Data Release" optional="false" />
      </when>
      <when value="Image">
        <param name="src_name" type="text" value="Mrk 421" label="src_name" optional="false" />
        <param name="RA" type="float" value="166.113808" label="RA (unit: deg)" optional="false" />
        <param name="DEC" type="float" value="38.208833" label="DEC (unit: deg)" optional="false" />
        <param name="Radius" type="float" value="3" label="Radius (unit: arcmin)" optional="false" />
        <param name="pixsize" type="float" value="1.0" label="Pixel size (unit: arcsec)" optional="false" />
        <param name="band" type="select" label="Band" optional="false">
          <option value="g" selected="true">g</option>
          <option value="i">i</option>
          <option value="r">r</option>
          <option value="z">z</option>
        </param>
        <param name="data_release" type="integer" value="10" label="Data Release" optional="false" />
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data label="${tool.name} -&gt; Catalog catalog_table" name="out_Catalog_catalog_table" format="auto" from_work_dir="catalog_table_galaxy.output">
      <filter>C_data_product_['DPselector_'] == 'Catalog'</filter>
    </data>
    <data label="${tool.name} -&gt; Catalog dictionary_filters" name="out_Catalog_dictionary_filters" format="auto" from_work_dir="dictionary_filters_galaxy.output">
      <filter>C_data_product_['DPselector_'] == 'Catalog'</filter>
    </data>
    <data label="${tool.name} -&gt; Spectrum spectrum_table" name="out_Spectrum_spectrum_table" format="auto" from_work_dir="spectrum_table_galaxy.output">
      <filter>C_data_product_['DPselector_'] == 'Spectrum'</filter>
    </data>
    <data label="${tool.name} -&gt; Spectrum spectrum_png" name="out_Spectrum_spectrum_png" format="auto" from_work_dir="spectrum_png_galaxy.output">
      <filter>C_data_product_['DPselector_'] == 'Spectrum'</filter>
    </data>
    <data label="${tool.name} -&gt; Image picture" name="out_Image_picture" format="auto" from_work_dir="picture_galaxy.output">
      <filter>C_data_product_['DPselector_'] == 'Image'</filter>
    </data>
    <data label="${tool.name} -&gt; Image fits" name="out_Image_fits" format="auto" from_work_dir="fits_galaxy.output">
      <filter>C_data_product_['DPselector_'] == 'Image'</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <conditional name="C_data_product_">
        <param name="DPselector_" value="Catalog" />
        <param name="src_name" value="Mrk 421" />
        <param name="RA" value="166.113808" />
        <param name="DEC" value="38.208833" />
        <param name="Radius" value="1" />
        <param name="data_release" value="10" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="2">
      <conditional name="C_data_product_">
        <param name="DPselector_" value="Spectrum" />
        <param name="src_name" value="Mrk 421" />
        <param name="RA" value="166.113808" />
        <param name="DEC" value="38.208833" />
        <param name="Radius" value="0.1" />
        <param name="data_release" value="10" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
    <test expect_num_outputs="2">
      <conditional name="C_data_product_">
        <param name="DPselector_" value="Image" />
        <param name="src_name" value="Mrk 421" />
        <param name="RA" value="166.113808" />
        <param name="DEC" value="38.208833" />
        <param name="Radius" value="3" />
        <param name="pixsize" value="1.0" />
        <param name="band" value="g" />
        <param name="data_release" value="10" />
      </conditional>
      <assert_stdout>
        <has_text text="*** Job finished successfully ***" />
      </assert_stdout>
    </test>
  </tests>
  <help>And here, the help text for the galaxy tool goes.
</help>
  <citations>
    <citation type="doi">10.3847/1538-3881/ab089d</citation>
  </citations>
</tool>